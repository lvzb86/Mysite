[uwsgi]
# 启动uwsgi的用户名和用户组
uid = root
gid = root
project = blogproject
# socket ： 地址和端口号，例如：socket = 127.0.0.1:50000
socket = 127.0.0.1:8186

# procname ： 可自行设定进程名称
procname = My Blog
# master ： 允许主进程存在（enable master process）
master = True
# processes ： 开启的进程数量
processes = 3
# workers ： 开启的进程数量，等同于processes（官网的说法是spawn the specified number of  workers / processes）
# threads ： 运行线程。（run each worker in prethreaded mode with the specified number of threads）
threads = 2

# chdir ： 指定运行目录（chdir to specified directory before apps loading）
chdir = /home/Mysite/blogproject
# wsgi-file ： 载入wsgi-file（load .wsgi file）
wsgi-file = blogproject/wsgi.py
# module = blogproject.wsgi # 可以这么来理解，对于uwsgi.ini文件来说，与它的平级的有一个blogproject目录，这个目录下有一个wsgi.py文件
# static-map ： 映射挂载点到静态目录（或者文件）
# static-map = /static/ = /home/Mysite/blogproject/static/
# stats ： 在指定的地址上，开启状态服务（enable the stats server on the specified address）

# py-autoreload ： 监控python模块mtime来触发重载 (只在开发时使用)
py-autoreload = 1

# log-maxsize ：以固定的文件大小（单位KB），切割日志文件。 例如：log-maxsize = 50000000  就是50M一个日志文件。
log-maxsize = 50000000
# pidfile ： 指定pid文件的位置，记录主进程的pid号。
pidfile = uwsgi.pid
# vacuum ： 当服务器退出的时候自动清理环境，删除unix socket文件和pid文件（try to remove all of the generated file/sockets）
vacuum = true
# daemonize ： 使进程在后台运行，并将日志打到指定的日志文件或者udp服务器（daemonize uWSGI）。实际上最常用的，还是把运行记录输出到一个本地文件上。
daemonize = /home/Mysite/blogproject/log/uwsgi_blog.log
# disable-logging ： 不记录请求信息的日志。只记录错误以及uWSGI内部消息到日志中。
disable-logging = true
